apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "com.diffplug.spotless"
apply plugin: "maven-publish"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {

        minSdkVersion 24
        targetSdkVersion 29
        versionCode project.property("version_code").toInteger()
        versionName project.property("version_name") as String

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:1.3.0"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.github.kuamanet:android-native-opencv:0.1"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    api "androidx.activity:activity-ktx:1.1.0"

    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:1.0.0-beta06"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta06"
    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha13"

    // zoomable image view
    implementation "com.github.chrisbanes:PhotoView:2.3.0"
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'

    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"

}

spotless {
    kotlin {
        target "**/*.kt"
        // EditorConfig support is broken: https://github.com/diffplug/spotless/issues/142
        ktlint("0.35.0").userData(["disabled_rules": "no-wildcard-imports,import-ordering,chain-wrapping"])
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds javadocs and sources as separate jars.
                // artifact androidJavadocsJar
                artifact androidSourcesJar

                groupId 'net.kuama.android'
                artifactId 'documentscanner'
                version project.property('version_name')
            }
        }
    }
}